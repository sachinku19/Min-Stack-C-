#include<stdio.h>
#include<stdlib.h>
#include<stdbool.h>
struct stack
{
    int size;
    int top;
    int *arr;
};

int isempty(struct stack *ptr)
{
    if(ptr->top==-1)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}

int isfull(struct stack *ptr)
{
    if(ptr->top==ptr->size-1)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}

void resize_stack(struct stack *ptr)
{
    int new_size=ptr->size*2;
    ptr->arr=(int*)realloc(ptr->arr,new_size*sizeof(int));
    ptr->size=new_size;
    printf("stack resize to %d\n",new_size);
}

void push(struct stack *ptr)
{
    int val;
    printf("enter the value:\n");
    scanf("%d",&val);

int p=ptr->top;
    if(isfull(ptr))
    {
        printf("stack is overflow:\n");
        resize_stack(ptr);

    }
    
       while(val>ptr->arr[p] && p>=0)
       {
        ptr->arr[p+1]=ptr->arr[p];
        p--;
       }
       p++;
       ptr->arr[p]=val;
       printf("%d is pushed into the stack:\n",val);
       
    
    ptr->top++;

}
int pop(struct stack *ptr)
{
    if(isempty(ptr))
    {
        printf("stack is in underflow:\n");
    }
    else
    {
        ptr->top--;
        int val=ptr->arr[ptr->top];
        printf("%d is poped from stack:\n",val);
    }
}
int traverse(struct stack *ptr)
{
    for(int i=0;i<=ptr->top;i++)
    {
       printf("%4d",ptr->arr[i]);
    }
}

int min(struct stack *ptr)
{
    if(isempty(ptr))
    {
        printf("stack is empty:\n");

    }
    else
    {
        return ptr->arr[ptr->top];
    }
}
int main()
{
    struct stack *sp=(struct stack*)malloc(sizeof(struct stack));
    int intial_size;
    printf("enter the size of stack:\n");
    scanf("%d",&intial_size);
    sp->top=-1;
    sp->size=intial_size;
    sp->arr=(int*)malloc(sp->size*sizeof(int));
    int choice;

    

    while(true)
    {
        printf("\nenter the case:\n1.pushed:\n2.pop:\n3.exit\n");
    scanf("%d",&choice);
        if(choice==1)
        {
            push(sp);
            traverse(sp);
        }
        else if(choice==2)
        {
            pop(sp);

        }
        else if(choice==3)
        {
            printf("invalid case:\n");
            
        }
        else
        {
            printf("exit...");
            return 0;
        }
       
    }
   min(sp); 
}
